@inject AudioEngine.Services.AudioEngineService AudioEngineService
@inject IJSRuntime IJSRuntime


<div>
  <div class="btn-group justify-content-start">
    <button type="button" class="btn btn-success" @onclick="HandleStart" disabled="@_isServerRunning">Start</button>
    <button type="button" class="btn btn-danger" @onclick="HandleStop" disabled="@(!_isServerRunning)">Stop</button>
  </div>
</div>




@code {
    private bool _isServerRunning;

    private async Task HandleStart()
    {
        await AudioEngineService.StartEngineAsync();
        _isServerRunning = true;
    }

    private async Task HandleStop()
    {
        await AudioEngineService.StopEngineAsync();
        _isServerRunning = false;
    }

    protected override void OnInitialized()
    {
        AudioEngineService.ServerStateChanged += OnServerStateChanged;
        _isServerRunning = AudioEngineService.IsRunning;
    }

    private async void OnServerStateChanged(object? sender, bool isServerRunning)
    {
        _isServerRunning = AudioEngineService.IsRunning;
        await InvokeAsync(StateHasChanged);
    }
}
